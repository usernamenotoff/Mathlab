/* 4.Creați o clasă derivată din Exception, numită SuperExceptie. O a doua clasă ExceptieMaiMica este derivată din
SuperExceptie. În constructorii claselor afisați un mesaj ce indică excepția generată. În cadrul unei alte clase creați o
metodă a( ) ce semnalizeaza (aruncă) o excepție de tip ExceptieMaiMica și o metodă b( ) ce semnalizeaza o excepție de
tip SuperExceptie.
În cadrul metodei main( ) apelați aceste metode și încercați să determinați tipul de excepție semnalizată, precum și dacă
blocul catch aferent tipului de exceptie ExceptieMaiMica poate prinde o SuperExcepție*/

package laborator;
import java.io.*;
import java.util.Collections;
import java.util.Random;
import java.util.Scanner;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Random;
import java.util.Comparator;
import java.util.Scanner;


class SuperExceptie extends Exception {
    SuperExceptie() {
        System.out.println("SuperExceptie generata.");
    }
}

class ExceptieMaiMica extends SuperExceptie {
    ExceptieMaiMica() {
        System.out.println("ExceptieMaiMica generata.");
    }
}

class MyClass {
    void a() throws ExceptieMaiMica {
        throw new ExceptieMaiMica();
    }
    
    void b() throws SuperExceptie {
        throw new SuperExceptie();
    }
}



public class jordan{

	public static void main(String[] args) {

		MyClass obj = new MyClass();
	
		try {obj.a();
			
			
		}catch(ExceptieMaiMica e) {
			System.out.println("exceptie mai mica:");
		}
		try {obj.b();
		
		}catch(SuperExceptie e) {
			System.out.println("exceptie super:");
		}
	}
}