/*5. Definiți un sir de elemente de tip String. Folosind expresii lambda, ordonați-l după următoarele metode: lungime (mic-
>mare), inversul lungimii (mare->mic), ordine alfabetică, șirurile de caractere ce încep cu litera M vor fi primele, urmate
de restul șirurilor.*/

package laborator;
import java.io.*;


import java.util.Collections;
import java.util.Random;
import java.util.Scanner;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Random;

String[] sir = {"ana", "mere", "pere", "mar", "para", "morcov", "merele", "mango"};

// Ordinare după lungime (mic->mare)
Arrays.sort(sir, Comparator.comparing(String::length));

// Ordinare după inversul lungimii (mare->mic)
Arrays.sort(sir, Comparator.comparing(String::length).reversed());

// Ordinare alfabetică
Arrays.sort(sir);

// Ordinare după șirurile de caractere ce încep cu litera M
Arrays.sort(sir, (s1, s2) -> {
    if (s1.startsWith("M") && !s2.startsWith("M")) {
        return -1;
    } else if (!s1.startsWith("M") && s2.startsWith("M")) {
        return 1;
    } else {
        return s1.compareTo(s2);
    }
});